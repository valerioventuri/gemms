#!/bin/ksh
############################################################################
# Copyright 2008-2010 Istituto Nazionale di Fisica Nucleare
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
############################################################################

# print PID for logger
echo $$

# Include global declarations and service routines.
. /usr/lpp/mmfs/bin/mmglobfuncs
. /usr/lpp/mmfs/bin/mmsdrfsdef

export device=$arg1

export mountpoint=$(cat /proc/mounts | grep "^/dev/$device " | awk '{print $2}')

. /usr/local/yamss/bin/yamssCommands

export SYSTEM_DIRECTORY_PATH=$mountpoint/system

export GPFS_rshPath="/usr/bin/ssh"

if [ ! -f $mountpoint/system/YAMSS_CONFIG/hsmConfig ]; then
  echo "Error: missing hsmConfig file in system directory"
  cleanupAndExit 0        
fi

. $mountpoint/system/YAMSS_CONFIG/hsmConfig


# Check if this is the owner node of the TSM failover group
hostnam=$(hostname|cut -d. -f1)
ownerid=$(cat $mountpoint/.SpaceMan/hsmfsconfig.xml | grep Ownernode | cut -d">" -f2 | cut -d"<" -f1)
ownernode=$($mmlscluster | awk '{print $1,$2}' | grep "^$ownerid " | awk '{print $2}' | cut -d. -f1)

if [ "$ownernode"x = "x" -o "$hostnam"x = "x" -o "$ownernode"x != "$hostnam"x ]; then
  cleanupAndExit 0
fi

# read last report time
LASTREPORT=$(cat $SYSTEM_DIRECTORY_PATH/YAMSS_STAT/lastreport 2>/dev/null)
if [ "$LASTREPORT"x == "x" ]; then
  LASTREPORT=$(date +"%Y %B %A %_d %_H %_M %_S")
  echo $LASTREPORT > $SYSTEM_DIRECTORY_PATH/YAMSS_STAT/lastreport
fi

NOW=$(date +"%Y %B %A %_d %_H %_M %_S")
NOWEPOCH=$(date +%s)
let PREVEPOCH=$NOWEPOCH-86400

DAYLAST=$(echo $LASTREPORT | awk '{print $4}')
DAYNOW=$(echo $NOW | awk '{print $4}')
HOURNOW=$(echo $NOW | awk '{print $5}')

if [ "$HOURNOW"x = "$REPORT_DAILY_HOUR"x -a "$DAYNOW"x != "$DAYLAST"x ]; then

  echo "Sending periodic report to $REPORT_EMAIL_ADDRESS_LIST"

  echo $NOW > $SYSTEM_DIRECTORY_PATH/YAMSS_STAT/lastreport
  {
    echo -e "subject: GPFS+TSM report"

    echo "GPFS/TSM migration statistics"
    $yamssMigrateStat $device $PREVEPOCH $NOWEPOCH

    echo "GPFS/TSM recall statistics"
    $yamssRecallStat $device $PREVEPOCH $NOWEPOCH

    echo Current drive status
    $dsmadmc -id=$TSM_ID -password=$TSM_PASSWORD -tabdelimited -dataonly=yes "query drive" > /tmp/drive_status_$device
    rc=$?
    if [ $rc -eq 0 ]; then
      { printf "Library Drive Type Online\n"
        cat /tmp/drive_status_$device 
      } | column -t
    fi
    echo

    echo Current drive path status
    $dsmadmc -id=$TSM_ID -password=$TSM_PASSWORD -tabdelimited -dataonly=yes "query path" > /tmp/drive_path_status_$device
    rc=$?
    if [ $rc -eq 0 ]; then
       { printf "Server Source Drive Destination Online\n"
         cat /tmp/drive_path_status_$device
       } | column -t
    fi
    echo

    echo Current HSM nodes status
    for nodeName in $(echo $MIGRATE_NODE_LIST | tr "," " "); do
      $mmdsh -vL $nodeName uptime
    done
    echo

    echo Current space tokens status
    {
       printf "Space_token Used(TiB) Quota(TiB)\n"
       for file in $($mmlsfileset $device | egrep -v root | grep Linked | awk '{print $1}'); do 
         used=$($mmlsquota -j $file  | grep FILESET | awk '{print $3*1024./2**40}')
         quota=$($mmlsquota -j $file  | grep FILESET | awk '{print $5*1024./2**40}')
         total_used_sp=$(echo $total_used_sp $used | awk '{print $1+$2}')
         total_quota_sp=$(echo $total_quota_sp $quota | awk '{print $1+$2}')
         if [ $used"x" = "x" ]; then
           used="n/a"
         fi
         if [ $quota"x" = "x" ]; then
           quota="n/a"
         fi
         printf "%s %s %s\n" $file $used $quota
       done
       printf "Total %s %s\n" $total_used_sp $total_quota_sp
     } | column -t
     echo
     total_available=$(df /dev/$device | egrep -v Mounted | awk '{print $2*1024./2**40}')
     total_used=$(df /dev/$device | egrep -v Mounted | awk '{print $3*1024./2**40}')
     echo Filesystem occupancy
     printf "used(TiB) available(TiB)\n %s %s\n" $total_used $total_available | column -t
     echo

     echo Current configuration
     echo
     cat $mountpoint/system/YAMSS_CONFIG/hsmConfig

     echo GPFS policy
     echo
     $mmlspolicy $device -L 
  } | sendmail -f $device@cnaf.infn.it $REPORT_EMAIL_ADDRESS_LIST
fi

