#!/bin/bash
############################################################################
# Copyright 2008-2012 Istituto Nazionale di Fisica Nucleare
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
############################################################################


function strstr () {
    # if s2 points to a string of zero length, strstr echoes s1
    [ ${#2} -eq 0 ] && { echo "$1" ; return 0; }

    # strstr echoes nothing if s2 does not occur in s1
    case "$1" in
    *$2*) ;;
    *) return 1;;
    esac

    # use the pattern matching code to strip off the match and everything
    # following it
    first=${1/$2*/}

    # then strip off the first unmatched portion of the string
    echo "${1##$first}"
}

tsm_select() {
  $dsmadmc -id=$TSM_ID -password=$TSM_PASSWORD -tabdelimited -dataonly=yes "select $1"
  return $?
}

read_volume_name() {
  volname=$($ng yamssDB2Query $TSM_SERVER $TSM_SERVER_DB_NAME $TSM_SERVER_DB_PORT $TSM_SERVER_ID $TSM_SERVER_PASSWORD "SELECT VOLNAME FROM TSMDB1.SS_VOLUME_IDS WHERE VOLID=(SELECT VOLID FROM TSMDB1.AF_SEGMENTS WHERE SRVID=0 AND POOLID=(SELECT POOLID FROM TSMDB1.AF_BITFILES WHERE SRVID=0 AND BFID=$1) AND BFID=$1 FETCH FIRST 1 ROW ONLY)")

  if [ "$volname"x != "x" ]; then
    echo $volname
    return 0
  fi
  return 1
}

write_stat() {
  p1=$1
  p2=$2
  p3=$3
  p4=$4
  shift
  shift
  shift
  shift

  # next line is temporarily commented out
  # lockfile -1 -l10 $p2 2>/dev/null

  if [ $p4 = '0' ]; then
    stat=OK
  else
    stat=ERR
  fi

  echo $p3 $stat $1 $2 $3 $4 $5 $6 $7 $8 $9 >> $p1

  # next line is temporarily commented out
  # rm -f $p2

  return $p4
}


